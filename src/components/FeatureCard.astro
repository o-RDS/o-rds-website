---
interface Props {
	title: string;
	body: string;
	imagePath: string;
	benefits: String[];
}

const { title, body, imagePath, benefits } = Astro.props;
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/images/*.{jpeg,jpg,png,gif}')
console.log(images);
console.log(images["/src/assets/images/easy.png"]);
if (!images[imagePath]) throw new Error(`"${imagePath}" does not exist in glob: "src/assets/images/*.{jpeg,jpg,png,gif}"`);
---

<li class="link-card">
	<div class="border-4 border-rdsBlue">
			<Image src={images[imagePath]()} alt="" class="p-2 border border-rdsOrange rounded-lg bg-rdsOrange bg-opacity-10 w-[50px] h-[50px]"/>
		<h2 class="text-2xl font-bold m-0">
			{title}
		</h2>
		<p class="text-base">
			{body}
		</p>
		<ul class="">
			{benefits.map((subFeature, key) => {
				return (<li class="my-4"><p class="py-2">{subFeature}</p><div class="bg-rdsOrange w-[50px] h-[2px] rounded-lg"></div></li>);
			})}
		</ul>
	</div>
</li>
<style>
	.link-card {
		list-style: none;
		display: flex;
		padding: 1px;
		justify-content: center;
		/* width: 25%; */
		/* background-color: #23262d; */
		background-image: none;
		border-radius: 7px;
		/* transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1); */
	}
	.link-card > div {
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: black;
		opacity: 0.8;
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
	}
	/* .link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	} */
</style>
