---
interface Props {
  title: string;
  body: string;
  image: string;
}
import { Image } from "astro:assets";
const { title, body, image } = Astro.props;
import type { ImageMetadata } from "astro";

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/images/*.{jpeg,jpg,png,gif}"
);
console.log(images);
console.log(images["/src/assets/images/easy.png"]);
if (!images[image])
  throw new Error(
    `"${image}" does not exist in glob: "src/assets/images/*.{jpeg,jpg,png,gif}"`
  );
---

<li class="link-card">
  <div class="text-center text-black flex flex-col items-center">
    <div class="rounded-full size-fit border-2 border-rdsOrange">
      <div class="size-14 lg:size-20 flex flex-col items-center justify-center">
        <div class="size-full flex flex-col items-center justify-center">
          <Image src={images[image]()} alt="" />
        </div>
      </div>
    </div>
    <h2 class="text-2xl m-0 mt-2">
      {title}
    </h2>
    <p class="text-base">
      {body}
    </p>
  </div>
</li>
<style>
  .link-card {
    list-style: none;
    display: flex;
    padding: 1px;
    /* background-color: #23262d; */
    background-image: none;
    background-size: 400%;
    border-radius: 7px;
    background-position: 100%;
    transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
    box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
  }
  .link-card > div {
    width: 100%;
    text-decoration: none;
    line-height: 1.4;
    padding: calc(1.5rem - 1px);
    border-radius: 8px;
    color: black;
    /* background-color: #23262d; */
    opacity: 0.8;
  }
  /* h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	} */
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  /* .link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	} */
</style>
